"""
Задание 2. Выполнить логические побитовые операции "И", "ИЛИ"
и др. над числами 5 и 6. Выполнить
над числом 5 побитовый сдвиг вправо и влево на два знака.

Подсказка: это стандартные операции, которые осуществляются с помощью
стандартных операторов. Попробуйте найти каких именно.
"""

'''
# Еще в помощь:

Первые логические операции можно выполнить, 
используя знания таблиц истинности (из алгебры логики).

Логическое умножение "И":
101
110
----
100
Двоичное число 100 - это десятичное число 4.

Логическое сложение "ИЛИ":
101
110
---
111 - это число 7.

"Исключающее ИЛИ":
101
110
----
011 - это число 3.


При побитовом (логическом) сдвиге числа 5 (дв. 101) 
влево на два знака получаем число 10100 (дес. 20).
При таком сдвиге уходящий бит исчезает, не влияя на 
оставшиеся биты, а на месте появившегося бита записывается бит 0.

При сдвиге вправо получаем 101 >> 001, но т.к. начальные 
(незначащие) нули отбрасываются, то остается 1.
'''

NUMB_A = 5
NUMB_B = 6

print(f"Даны числа {NUMB_A} и {NUMB_B}")

# Логическое 'И'
print("Логическое 'И': '0101' & '0110' = '0100' т.е  4")
print(f"Логическое 'И': {NUMB_A}&{NUMB_B} = {NUMB_A & NUMB_B}")

# Логическое 'ИЛИ'
print("Логическое 'ИЛИ': '0101' & '0110' = '111' т.е  7")
print(f"Логическое 'ИЛИ': {NUMB_A}|{NUMB_B} = {NUMB_A | NUMB_B}")

# Логическое 'ИСКЛЮЧАЮЩЕЕ ИЛИ'
print("Побитовое 'XOR': '0101' ^ '0110' = '011' т.е  3")
print(f"Логическое 'ИСКЛЮЧАЮЩЕЕ ИЛИ': {NUMB_A}^{NUMB_B} = {NUMB_A ^ NUMB_B}")

# Логическое 'ОТРИЦАНИЕ'
print("Побитовое 'НЕ': ~'00000101' = '11111010' т.е  -6 ")
print(f"Логическое 'ОТРИЦАНИЕ': ~{NUMB_A} = {~NUMB_A}")

# Логическое сдвиг влево
print("Побитовое сдвиг влево '101' << 2 = '10100' т.е  20 (5 * 2 ** 2)")
print(f"Сдвиг влево на 2 знака: {NUMB_A} << 2 = {NUMB_A<<2}")

# Логическое сдвиг влево
print("Побитовое сдвиг вправо '101' >> 2 = '001'  т.е  1 (5 // (2 ** 2)) ")
print(f"Сдвиг вправо на 2 знака: {NUMB_A} >> 2 = {NUMB_A>>2}")
